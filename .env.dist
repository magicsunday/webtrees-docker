###########
# General #
###########

# The PHP version to use for all containers.
# Supported versions: 7.4, 8.0, 8.1, 8.2, 8.3, 8.4
# Note: e.g. Webtrees v2.2.0 requires PHP 8.2 or higher
PHP_VERSION=8.3

# Specifies the PHP configuration mode.
# Options:
#   - development: Enables error reporting, disables opcache for easier debugging
#   - production: Optimizes for performance, enables opcache, disables error reporting
ENVIRONMENT=development

# Docker compose project name.
# This prevents conflicts with other Docker projects by ensuring unique container names.
# Example: If set to "webtrees", containers will be named "webtrees-nginx", "webtrees-db", etc.
COMPOSE_PROJECT_NAME=webtrees

# HTTPS enforcement setting.
# Options:
#   - TRUE: Forces HTTPS by redirecting all HTTP requests to HTTPS
#   - FALSE: Allows both HTTP and HTTPS connections
# Note: For production environments, TRUE is strongly recommended for security
ENFORCE_HTTPS=TRUE

# Directory where the webtrees application will be installed.
# This directory is mounted into the containers and contains all application code.
# The application is available within Buildbox ("make bash") under the directory /app.
# Default: ./app (relative to project root)
APP_DIR=./app

# Directory where your webtrees media data is located.
# Must be an absolute path to the directory containing media files.
# This path will be directly mapped into the running containers.
# Example: /home/user/webtrees-media or C:\webtrees-media
MEDIA_DIR=./persistent/media

# The domain name for accessing the development system when using a reverse proxy.
# Do not include http:// or https:// prefixes.
# Example: webtrees.example.com
# Note: This is only used when the Traefik configuration is enabled
DEV_DOMAIN=

################
# Docker stack #
################

# This section configures which Docker Compose files to use for different environments.
# The setup script will automatically configure this based on your choices.
# If you need further customizations, you can create a docker-compose.override.yaml file.

# Available configuration options:
#
# 1. Production environment:
#    - Uses minimal configuration for optimal performance
#    - No development tools or debugging features
#COMPOSE_FILE=compose.yaml

# 2. Development environment (without reverse proxy):
#    - Includes development tools and buildbox containers
#    - Maps ports directly to host for easy access
#    - Can use local media directory
#COMPOSE_FILE=compose.yaml:compose.development.yaml:compose.external.yaml

# 3. Development environment with Traefik reverse proxy:
#    - Includes all development features
#    - Integrates with Traefik for domain-based access
#    - Supports automatic HTTPS
#COMPOSE_FILE=compose.yaml:compose.development.yaml:compose.traefik.yaml:compose.external.yaml

# This value will be automatically configured by the setup script.
# Do not modify this line manually unless you know what you're doing.
COMPOSE_FILE=

#####################
# Development Ports #
#####################

# Configure the host ports used to access the services in development when no
# reverse proxy (like Traefik) is used. These values are consumed by the
# compose.development.yaml and can be customized to avoid conflicts on your
# machine.

# Webtrees application port (host -> container:80)
#APP_PORT=50010

# phpMyAdmin port (host -> container:80)
#PMA_PORT=50011

#################################
# User information for buildbox #
#################################

# These settings control the user permissions within the buildbox container.
# Proper configuration ensures files created in the container have the correct
# ownership and permissions on the host system.

# User ID (UID) for the buildbox user.
# This should match your host system user ID to avoid permission issues.
# How to find your UID:
#   - Linux/macOS: Run "id -u" in terminal
#   - Windows with WSL: Run "id -u" in WSL terminal
# Example: 1000 (common default for first user on Linux systems)
LOCAL_USER_ID=

# Username for the buildbox user.
# This is used for display purposes and in container logs.
# Requirements:
#   - Must not contain dots or special characters
#   - Should be lowercase
# Example: developer
LOCAL_USER_NAME=

# Group ID (GID) for file access.
# This should be set to the web server group ID to ensure proper file permissions.
# Default values:
#   - 82 for Alpine Linux (nginx)
#   - 33 for Debian/Ubuntu (www-data)
# How to find a group ID:
#   - Linux/macOS: Run "getent group www-data" or "id -g"
LOCAL_GROUP_ID=82

# Group name for file access.
# This should match the web server group name.
# Common values:
#   - www-data (Debian/Ubuntu)
#   - nginx (Alpine)
#   - apache (CentOS/RHEL)
LOCAL_GROUP_NAME=www-data

#################
# Docker Server #
#################

# These settings configure the Docker registry for pushing and pulling images.
# They are primarily used when building and publishing custom images.

# Docker registry server URL.
# This is the address of the registry where images will be pushed/pulled.
# Examples:
#   - ghcr.io/username (GitHub Container Registry)
#   - docker.io/username (Docker Hub)
#   - registry.gitlab.com/username (GitLab Container Registry)
#   - localhost:5000 (Local registry)
DOCKER_SERVER=ghcr.io/magicsunday

# Username for authenticating with the Docker registry.
# For GitHub Container Registry, this is your GitHub username.
# For Docker Hub, this is your Docker Hub username.
# Leave empty if using a local registry without authentication.
DOCKER_USERNAME=

# Password or access token for the Docker registry.
# For GitHub, use a personal access token with appropriate permissions.
# For Docker Hub, use your password or access token.
# Security note: Consider using Docker credential helpers instead of storing
# passwords in plain text for production environments.
DOCKER_PASSWORD=

###########
# MariaDB #
###########

# Database configuration settings for the Webtrees application.
# These settings are used by both the database container and the application
# to establish connections and set up the initial database.

# Root password for the MariaDB database.
# This is used for administrative access to the database.
# Security requirements:
#   - Must be at least 8 characters long
#   - Should include a mix of letters, numbers, and special characters
#   - Should not be reused from other services
# Note: This password is only used within the container and is not exposed externally
# unless you explicitly configure external access.
MARIADB_ROOT_PASSWORD=

# Database host address.
# Options:
#   - For the built-in database container: "db" (the service name in docker-compose)
#   - For an external database: IP address or hostname of your database server
# When using compose.external.yaml with an external database, this should be
# the name of the Docker network where your database is running.
MARIADB_HOST=

# Database port number.
# The standard port for MariaDB/MySQL is 3306.
# Only change this if your database runs on a non-standard port.
MARIADB_PORT=3306

# Name of the database to create for Webtrees.
# This database will be automatically created during container initialization
# if it doesn't already exist.
# Default: webtrees
MARIADB_DATABASE=webtrees

# Database user for Webtrees application.
# This user will be granted full access to the Webtrees database only.
# It's recommended to use a dedicated user for the application rather than root.
# Default: webtrees
MARIADB_USER=webtrees

# Password for the Webtrees database user.
# Security requirements:
#   - Must be at least 8 characters long
#   - Should include a mix of letters, numbers, and special characters
#   - Should not be the same as the root password
# This password will be used by the application to connect to the database.
MARIADB_PASSWORD=

########
# Mail #
########

# Email configuration for the Webtrees application.
# These settings allow Webtrees to send emails for notifications,
# password resets, and other system communications.

# SMTP server address for sending emails.
# Format: hostname:port or IP:port
# Examples:
#   - smtp.gmail.com:587 (Gmail)
#   - smtp.office365.com:587 (Office 365)
#   - mail.example.com:25 (Custom mail server)
#   - localhost:25 (Local mail server)
# Leave empty to disable email functionality
MAIL_SMTP=

# Domain name used in the "From" address of sent emails.
# This should be a domain that is authorized to send email from your SMTP server.
# The email address format will be: webtrees@MAIL_DOMAIN
# Example: example.org
MAIL_DOMAIN=example.org

# Mail host identifier.
# This is used in the email headers to identify the sending host.
# Options:
#   - Leave empty to use the container hostname
#   - Set to a custom name (e.g., "webtrees-production")
#   - Common value: "cron" for emails sent by scheduled tasks
MAIL_HOST=

################
# PHP settings #
################

# These settings control PHP behavior in the application.
# Adjusting these values can improve performance, allow larger uploads,
# and handle more complex genealogy data.

# Maximum script execution time in seconds.
# This limits how long a PHP script can run before it's terminated.
# Recommended values:
#   - 30-60 seconds for most operations
#   - 120-300 seconds for importing large GEDCOM files
#   - Set higher if you have very large family trees or complex reports
# Default: 30
PHP_MAX_EXECUTION_TIME=30

# PHP memory limit.
# This controls the maximum amount of memory a PHP script can use.
# Recommended values:
#   - 128M for small to medium sites
#   - 256M for medium to large sites
#   - 512M or more for very large family trees
# Note: Setting this too high can impact server performance
# Default: 128M
PHP_MEMORY_LIMIT=256M

# Maximum number of input variables.
# This limits how many form fields and GET/POST variables can be processed.
# Increase this value if you encounter errors when:
#   - Working with large forms
#   - Using complex search filters
#   - Importing data with many fields
# Default: 1000
PHP_MAX_INPUT_VARS=1000

# Maximum file upload size.
# This limits the size of individual files that can be uploaded.
# Recommended values:
#   - 8M for basic document uploads
#   - 32M for high-resolution photos
#   - 64M or more for video files
# Default: 8M
PHP_UPLOAD_MAX_FILESIZE=32M

# Maximum POST request size.
# This limits the total size of all data in a POST request, including file uploads.
# This value must be larger than PHP_UPLOAD_MAX_FILESIZE to allow file uploads.
# Recommended: At least twice the value of PHP_UPLOAD_MAX_FILESIZE
# Default: 8M
PHP_POST_MAX_SIZE=64M

##############
# phpMyAdmin #
##############

# Configuration for the phpMyAdmin container.
# phpMyAdmin provides a web interface for managing the MariaDB database.

# Maximum upload size for SQL files in phpMyAdmin.
# This controls how large SQL files can be when importing databases.
# Recommended values:
#   - 32M for most databases
#   - 64M or more for very large databases
# Note: This is separate from the PHP upload limits and only affects phpMyAdmin
UPLOAD_LIMIT=32M

##########################
# Webtrees Configuration #
##########################

# Application-specific settings for Webtrees.
# These settings control how Webtrees interacts with the database
# and handles URLs.

# Database table prefix.
# This prefix is added to all database table names created by Webtrees.
# Benefits of using a prefix:
#   - Allows multiple Webtrees installations to share a database
#   - Makes it easier to identify Webtrees tables in the database
#   - Helps prevent table name conflicts with other applications
# Default: wt_
WEBTREES_TABLE_PREFIX=wt_

# URL rewriting setting.
# This controls whether Webtrees uses clean URLs without "index.php" in the path.
# Options:
#   - 0: Disable URL rewriting (URLs will include index.php)
#   - 1: Enable URL rewriting (URLs will be shorter and more user-friendly)
# Note: Enabling URL rewriting requires proper server configuration (mod_rewrite for Apache)
# Default: 0
WEBTREES_REWRITE_URLS=0
