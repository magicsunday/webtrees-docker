[xdebug]
; Controls the protection mechanism for infinite recursion protection. The value
; of this setting is the maximum level of nested functions that are allowed
; before the script will be aborted.
xdebug.max_nesting_level = 1024

; This setting controls which Xdebug features are enabled.
;
; profile
;     Enables Profiling, with which you can analyse performance bottlenecks
xdebug.mode = profile

; A Function Trace, Garbage Collection Statistics, Profiling, or Step Debugging
; can be activated at the start of a PHP request. Whether this happens depends
; on the value of this setting:
;
; trigger
;     The functionality only gets activated when a specific trigger is present
;     when the request starts.
xdebug.start_with_request = trigger

; The directory where Xdebug will write tracing, profiling, and garbage
; collection statistics to. This directory needs to be writable for the system
; user with which PHP is running.
xdebug.output_dir = "/tmp"

; If enabled, Xdebug will first try to connect to the client that made the HTTP
; request. It checks the ``$_SERVER['HTTP_X_FORWARDED_FOR']`` and
; ``$_SERVER['REMOTE_ADDR']`` variables to find out which hostname or IP address
; to use.
xdebug.discover_client_host = yes

; The port to which Xdebug tries to connect on the remote host. Port ``9003`` is
; the default for both Xdebug and the Command Line Debug Client. As many clients
; use this port number, it is best to leave this setting unchanged.
xdebug.client_port = 9000

; Xdebug will log to this file all file creations issues, Step Debugging
; connection attempts, failures, and debug communication.
xdebug.log = "/tmp/xdebug.log"
