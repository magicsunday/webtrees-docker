#!/usr/bin/env bash

# Instructs a shell to exit if a command fails, i.e., if it outputs a non-zero exit status.
set -e

## Prints out command arguments during execution.
#set -x

# Configuration
readonly CONFIG_FILE="vendor/fisharebest/webtrees/data/config.ini.php"
readonly WEBTREES_BASE="${APP_DIR}/vendor/fisharebest/webtrees"
readonly SUCCESS_MARKER="\033[0;32m ✔\033[0m"
readonly ERROR_MARKER="\033[0;31m ✘\033[0m"
readonly WEBTREES_REPO="https://github.com/fisharebest/webtrees.git"

# Required directories array
readonly REQUIRED_DIRS=(
    "data/media"
    "data/cache"
    "resources/lang"
)

# Logging utilities
logSuccess() {
    echo -e "${SUCCESS_MARKER} $1"
}

logError() {
    echo -e "${ERROR_MARKER} $1" >&2
}

# Validate environment
validateEnvironment() {
    local required_vars=(
        "APP_DIR"
        "MARIADB_HOST"
        "MARIADB_PORT"
        "MARIADB_USER"
        "MARIADB_PASSWORD"
        "MARIADB_DATABASE"
        "DEV_DOMAIN"
        "ENFORCE_HTTPS"
    )

    for var in "${required_vars[@]}"; do
        if [[ -z "${!var}" ]]; then
            logError "Required environment variable $var is not set"
            exit 1
        fi
    done
}

# File operations
copyApplicationFiles() {
    if [[ ! -d "${APP_DIR}" ]]; then
        logError "Application directory does not exist"
        exit 1
    fi

    cp -r "${APP_DIR}"/../setup/public/* "${APP_DIR}"/public
    cp -r "${APP_DIR}"/../setup/composer.json "${APP_DIR}"
}

# Application installation
installApplication() {
    logSuccess "Installing webtrees"
    composer install -d "${APP_DIR}" --no-ansi --no-interaction

    cd "${APP_DIR}" || exit 1

    rm -rf html
    ln -sf public html

    cd - > /dev/null || exit 1
}

# Webtrees configuration
setupConfiguration() {
    logSuccess "Setting up webtrees configuring file"
    cd "${APP_DIR}" || exit 1

    cp ../setup/vendor/fisharebest/webtrees/data/config.ini.php "${CONFIG_FILE}"

    # Build project URL
    if [ "${ENFORCE_HTTPS}" == "TRUE" ]; then
        URL_SCHEME="https"
    else
        URL_SCHEME="http"
    fi

    local config_entries=(
        "dbhost=${MARIADB_HOST}"
        "dbport=${MARIADB_PORT}"
        "dbuser=${MARIADB_USER}"
        "dbpass=${MARIADB_PASSWORD}"
        "dbname=${MARIADB_DATABASE}"
        "base_url=${URL_SCHEME}:\/\/${DEV_DOMAIN}"
        "tblpfx=${WEBTREES_TABLE_PREFIX}"
        "rewrite_urls=${WEBTREES_REWRITE_URLS}"
    )

    for entry in "${config_entries[@]}"; do
        local key="${entry%%=*}"
        local value="${entry#*=}"
        sed -i "s/${key}=.*/${key}=\"${value}\";/" "${CONFIG_FILE}"
    done

    cd - > /dev/null || exit 1
}

# Directory management
setupDirectories() {
    logSuccess "Setting up directory structure"
    rm -rf "${WEBTREES_BASE}/data/cache"

    for dir in "${REQUIRED_DIRS[@]}"; do
        mkdir -p "${WEBTREES_BASE}/${dir}"
    done
}

# Language files management
installLanguages() {
    logSuccess "Installing language files"
    rm -rf webtrees-languages

    git clone --quiet --no-checkout --depth=1 --filter=tree:0 \
        "${WEBTREES_REPO}" webtrees-languages

    cd webtrees-languages || exit 1
    git sparse-checkout set --no-cone /resources/lang
    git checkout --quiet --no-progress > /dev/null 2>&1
    cd - > /dev/null || exit 1

    cp -rf webtrees-languages/resources/lang/* "${WEBTREES_BASE}"/resources/lang
    rm -rf webtrees-languages
}

# Permission management
setDirectoryPermissions() {
    local target_dirs="${WEBTREES_BASE}/data/media ${WEBTREES_BASE}/data/cache ${WEBTREES_BASE}/resources/lang"
    chown "${LOCAL_USER_ID}:${LOCAL_GROUP_ID}" ${target_dirs}
    chmod ug+rw -R ${target_dirs}
}

# Main execution
main() {
    validateEnvironment
    copyApplicationFiles
    installApplication
    setupConfiguration
    setupDirectories
    installLanguages
    setDirectoryPermissions
    logSuccess "Installation completed successfully"
}

main